---
- name: Install gitlab namespace
  kubernetes.core.k8s:
    name: gitlab-system
    api_version: v1
    kind: Namespace
    state: present

- name: Install gitlab operator
  kubernetes.core.k8s:
    state: present
    src: "gitlab-operator-openshift-0.30.1.yml"

- name: Wait till the Object is created
  kubernetes.core.k8s_info:
    kind: CustomResourceDefinition
    api_version: apiextensions.k8s.io/v1
    wait: true
    name: gitlabs.apps.gitlab.com
    wait_sleep: 10
    wait_timeout: 360

- name: Get basedomain
  kubernetes.core.k8s_info:
    api_version: operator.openshift.io/v1
    kind: IngressController
    name: default
    namespace: openshift-ingress-operator
  register: basedomain_json

- name: Set basedomain variable
  ansible.builtin.set_fact:
    basedomain: "{{ basedomain_json.resources[0].status.domain }}"

- name: Print basedomain
  ansible.builtin.debug:
    var: basedomain

- name: Render the template with the basedomain
  ansible.builtin.template:
    src: "gitlab.j2"
    dest: "{{ gitlab_output_file }}"

- name: Install Gitlab
  kubernetes.core.k8s:
    state: present
    src: "{{ gitlab_output_file }}"

- name: Wait till the Object is created
  kubernetes.core.k8s_info:
    kind: GitLab
    api_version: apps.gitlab.com/v1beta1
    wait: true
    name: gitlab
    namespace: gitlab-system
    wait_sleep: 10
    wait_timeout: 360

- name: Wait for GitLab resource to be running
  kubernetes.core.k8s_info:
    api_version: apps.gitlab.com/v1beta1
    kind: GitLab
    name: gitlab
    namespace: gitlab-system
  register: gitlab_status
  until: gitlab_status.resources[0].status.phase == "Running"
  retries: 30
  delay: 10

- name: Print GitLab status
  ansible.builtin.debug:
    msg: "GitLab status is: {{ gitlab_status.resources[0].status.phase }}"
